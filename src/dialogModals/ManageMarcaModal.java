/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package dialogModals;

import components.ManageButtonCellRenderer;
import controlador.CategoriaControlador;
import controlador.MarcaControlador;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.Marca;
import vista.dashboard.CategoriaPage;

/**
 *
 * @author intel
 */
public class ManageMarcaModal extends javax.swing.JDialog {

    /**
     * Creates new form AddCategoriaModal
     * @param parent
     * @param modal
     */
    public ManageMarcaModal(java.awt.Frame parent, boolean modal, DefaultComboBoxModel MarcaComboBoxModel) {
        super(parent, modal);
        initComponents();
        this.MarcaComboBoxModel = MarcaComboBoxModel;
        cargarMarcasEnCombobox();
    }
    
    private void cargarMarcasEnCombobox(){
        MarcaComboBoxModel.removeAllElements();
        MarcaComboBoxModel.addElement("Seleccionar Marca");
        List<Marca> marcas = MarcaControlador.obtenerMarcas();
        marcas.forEach(marca -> MarcaComboBoxModel.addElement(marca));
        MarcaComboBox.setModel(MarcaComboBoxModel);
    }
    
    private DefaultComboBoxModel MarcaComboBoxModel;
    private int idMarca = -1;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameInput = new components.jInput("Ingrese el nombre");
        jLabel2 = new javax.swing.JLabel();
        AddOrEditButton = new components.jButton();
        MarcaComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        deleteMarcaButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestionar Marca");

        nameInput.setText("Ingrese el nombre");

        jLabel2.setText("Nombre");

        AddOrEditButton.setText("Agregar");
        AddOrEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddOrEditButtonActionPerformed(evt);
            }
        });

        MarcaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarcaComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Marcas");

        deleteMarcaButton.setText("Eliminar");
        deleteMarcaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMarcaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteMarcaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                        .addComponent(AddOrEditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(nameInput, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                        .addComponent(MarcaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(27, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MarcaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AddOrEditButton, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(deleteMarcaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddOrEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddOrEditButtonActionPerformed
        if(idMarca > 0)
            editarMarca();
        else
            crearNuevaMarca();
    }//GEN-LAST:event_AddOrEditButtonActionPerformed

    private void MarcaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarcaComboBoxActionPerformed
        try{
            Marca marca = (Marca) MarcaComboBox.getSelectedItem();
            if(marca != null){
                AddOrEditButton.setText("Editar");
                deleteMarcaButton.setVisible(true);
                nameInput.setValue(marca.getNombre());
                idMarca = marca.getId();
            }
            
        } catch(ClassCastException error){
            AddOrEditButton.setText("Agregar");
            deleteMarcaButton.setVisible(false);
            nameInput.setValue("");
            idMarca = -1;
        }
    }//GEN-LAST:event_MarcaComboBoxActionPerformed

    private void deleteMarcaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMarcaButtonActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(
                null,
                "¿Estás seguro que desea eliminar la marca?",
                "Advertencia",
                JOptionPane.OK_CANCEL_OPTION
        );

        if(respuesta == 0){
            int operacion = MarcaControlador.eliminarMarca(idMarca);
            switch (operacion) {
                case 1 -> JOptionPane.showMessageDialog(null, "No se puede eliminar una marca que tiene al menos un producto");
                case 0 -> {
                    JOptionPane.showMessageDialog(null, "Registro elminado con éxito");
                    cargarMarcasEnCombobox();
                    nameInput.setValue("");
                }
                default -> JOptionPane.showMessageDialog(null, "Ocurrió un error al eliminar la marca");
            }
        }
    }//GEN-LAST:event_deleteMarcaButtonActionPerformed

    private void crearNuevaMarca(){
        Marca marca = new Marca();
        String nombre = nameInput.getValue();
        
        if(!nombre.isEmpty()){
            marca.setNombre(nombre);

            // Intenta crear una nueva categoría utilizando el controlador de categorías
            if(MarcaControlador.crearMarca(marca)){
                // Si la categoría se crea con éxito, muestra un mensaje de éxito
                JOptionPane.showMessageDialog(null, "Registro guardado");
                cargarMarcasEnCombobox();
                nameInput.setValue("");
            } else {
                // Si hay un error al crear la categoría, muestra un mensaje de error
                JOptionPane.showMessageDialog(null, "Error al guardar");
            }
        } else {
            // Si alguno de los campos está vacío, muestra un mensaje pidiendo completar todos los campos
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        }
    }
    
    private void editarMarca(){
        Marca marca = new Marca();

        String nombre = nameInput.getValue();

        if(!nombre.isEmpty()){
            marca.setNombre(nombre);
            marca.setId(idMarca);
            
            if(MarcaControlador.actualizarMarca(marca)){
                JOptionPane.showMessageDialog(null, "Registro actualizado");
                cargarMarcasEnCombobox();
            } else {
                // Si hay un error al crear la categoría, muestra un mensaje de error
                JOptionPane.showMessageDialog(null, "Error al guardar");
            }
        } else {
            // Si alguno de los campos está vacío, muestra un mensaje pidiendo completar todos los campos
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageMarcaModal dialog = new ManageMarcaModal(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private components.jButton AddOrEditButton;
    private javax.swing.JComboBox<String> MarcaComboBox;
    private javax.swing.JButton deleteMarcaButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private components.jInput nameInput;
    // End of variables declaration//GEN-END:variables
}
