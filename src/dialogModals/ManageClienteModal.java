/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package dialogModals;

import javax.swing.JOptionPane;
import controlador.ClienteControlador;
import modelo.Cliente;
import utils.Validator;
import vista.dashboard.ClientePage;

/**
 *
 * @author intel
 */
public class ManageClienteModal extends javax.swing.JDialog {

    /**
     * Creates new form AddCategoriaModal
     *
     * @param parent
     * @param modal
     */
    public ManageClienteModal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    private String idCliente;

    public ManageClienteModal(java.awt.Frame parent, boolean modal, String id) {
        super(parent, modal);
        Cliente cliente = ClienteControlador.obtenerCliente(id);

        initComponents();

        jLabel1.setText("Editar Cliente");
        nameInput.setValue(cliente.getNombre());
        apellidoInput.setValue(cliente.getApellido());
        dniRucInput.setValue(cliente.getDni_ruc());
        emailInput.setValue(cliente.getEmail());
        telefonoInput.setValue(cliente.getTelefono());
        direccionInput.setValue(cliente.getDireccion());

        TipoClienteComboBox.setSelectedItem(cliente.getTipoCliente());

        jButton1.setText("Guardar");

        this.idCliente = id;
        ClientePage.recagarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameInput = new components.jInput("Ingrese el nombre");
        jLabel2 = new javax.swing.JLabel();
        dniRucInput = new components.jInput("Ingrese el DNI");
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new components.jButton();
        apellidoInput = new components.jInput("Ingrese el apellido");
        jLabel4 = new javax.swing.JLabel();
        emailInput = new components.jInput("Ingrese el email");
        jLabel5 = new javax.swing.JLabel();
        telefonoInput = new components.jInput("Ingrese el telefono");
        jLabel7 = new javax.swing.JLabel();
        direccionInput = new components.jInput("Ingrese la dirección");
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TipoClienteComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Crear Cliente");

        nameInput.setText("Ingrese el nombre");

        jLabel2.setText("Nombre");

        dniRucInput.setText("Ingrese el DNI");

        jLabel3.setText("Dni");

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        apellidoInput.setText("Ingrese el apellido");

        jLabel4.setText("Apellido");

        emailInput.setText("Ingrese el email");

        jLabel5.setText("Email");

        telefonoInput.setText("Ingrese el telefono");

        jLabel7.setText("Telefono");

        direccionInput.setText("Ingrese la dirección");

        jLabel8.setText("Direccion");

        jLabel9.setText("Tipo de Cliente");

        TipoClienteComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Persona", "Empresa" }));
        TipoClienteComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipoClienteComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(nameInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dniRucInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addComponent(direccionInput, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(34, 34, 34)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4)
                                .addComponent(apellidoInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addComponent(emailInput, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addComponent(telefonoInput, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)))
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TipoClienteComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(apellidoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dniRucInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(telefonoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(direccionInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TipoClienteComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (idCliente != null)
            editarCliente();
        else
            crearNuevoCliente();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TipoClienteComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipoClienteComboBoxActionPerformed
        if(TipoClienteComboBox.getSelectedItem().toString().equals("Persona")){
            jLabel3.setText("DNI");
            dniRucInput.setPlaceholder("Ingrese el DNI");
        } else {
            jLabel3.setText("RUC");
            dniRucInput.setPlaceholder("Ingrese el RUC");
        }
    }//GEN-LAST:event_TipoClienteComboBoxActionPerformed

    private void crearNuevoCliente() {
        try {
            Cliente cliente = new Cliente();

            // Obtiene los valores ingresados en los campos de texto
            String nombre = nameInput.getValue();
            String apellido = apellidoInput.getValue();
            String dniRuc = dniRucInput.getValue();
            String email = emailInput.getValue();
            String telefono = telefonoInput.getValue();
            String direccion = direccionInput.getValue();
            String tipoCliente = TipoClienteComboBox.getSelectedItem().toString();

            // Verifica si ambos campos de texto no están vacíos
            if (nombre.isEmpty() || apellido.isEmpty() || dniRuc.isEmpty() || email.isEmpty() || telefono.isEmpty()) {
                throw new Exception("Complete todos los campos");
            }

            Validator.EMAIL(email);
            if (tipoCliente.equals("Persona")) {
                Validator.DNI(dniRuc);
            } else {
                Validator.RUC(dniRuc);
            }

            cliente.setNombre(nombre);
            cliente.setApellido(apellido);
            cliente.setDni_ruc(dniRuc);
            cliente.setEmail(email);
            cliente.setTelefono(telefono);
            cliente.setDireccion(direccion);
            cliente.setTipoCliente(tipoCliente);

            // Intenta crear una nueva categoría utilizando el controlador de categorías
            if (ClienteControlador.crearCliente(cliente)) {
                // Si la categoría se crea con éxito, muestra un mensaje de éxito
                JOptionPane.showMessageDialog(null, "Registro guardado");
                ClientePage.recagarTabla();
                dispose();
            } else {
                // Si hay un error al crear la categoría, muestra un mensaje de error
                JOptionPane.showMessageDialog(null, "Error al guardar");
            }
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, error.getMessage());
        }
    }

    private void editarCliente() {
        try {
            Cliente cliente = new Cliente();

            // Obtiene los valores ingresados en los campos de texto
            String nombre = nameInput.getValue();
            String apellido = apellidoInput.getValue();
            String dniRuc = dniRucInput.getValue();
            String email = emailInput.getValue();
            String telefono = telefonoInput.getValue();
            String direccion = direccionInput.getValue();
            String tipoCliente = TipoClienteComboBox.getSelectedItem().toString();

            // Verifica si ambos campos de texto no están vacíos
            if (nombre.isEmpty() || apellido.isEmpty() || dniRuc.isEmpty() || email.isEmpty() || telefono.isEmpty()) {
                throw new Exception("Complete todos los campos");
            }

            Validator.EMAIL(email);
            if (tipoCliente.equals("Persona")) {
                Validator.DNI(dniRuc);
            } else {
                Validator.RUC(dniRuc);
            }

            cliente.setId(Integer.parseInt(idCliente));
            cliente.setNombre(nombre);
            cliente.setApellido(apellido);
            cliente.setDni_ruc(dniRuc);
            cliente.setEmail(email);
            cliente.setTelefono(telefono);
            cliente.setDireccion(direccion);
            cliente.setTipoCliente(tipoCliente);

            // Intenta crear una nueva categoría utilizando el controlador de categorías
            if (ClienteControlador.actualizarCliente(cliente)) {
                // Si la categoría se crea con éxito, muestra un mensaje de éxito
                JOptionPane.showMessageDialog(null, "Registro guardado");
                ClientePage.recagarTabla();
                dispose();
            } else {
                // Si hay un error al crear la categoría, muestra un mensaje de error
                JOptionPane.showMessageDialog(null, "Error al guardar");
            }
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, error.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageClienteModal dialog = new ManageClienteModal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> TipoClienteComboBox;
    private components.jInput apellidoInput;
    private components.jInput direccionInput;
    private components.jInput dniRucInput;
    private components.jInput emailInput;
    private components.jButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private components.jInput nameInput;
    private components.jInput telefonoInput;
    // End of variables declaration//GEN-END:variables
}
