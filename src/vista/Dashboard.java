/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import com.formdev.flatlaf.FlatLightLaf;
import conexion.Conexion;
import javax.swing.ImageIcon;
import java.awt.Image;
import javax.swing.Icon;
import java.awt.Component;
import modelo.Rol;
import vista.dashboard.CategoriaPage;
import vista.dashboard.ClientePage;
import vista.dashboard.CompraPage;
import vista.dashboard.ProductoPage;
import vista.dashboard.ProveedorPage;
import vista.dashboard.UsuarioPage;
import vista.dashboard.VentaPage;

/**
 *
 * @author intel
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    
    public Dashboard() {
        initComponents();
        this.setExtendedState(this.MAXIMIZED_BOTH); // Establece el tamaño de la ventana para maximizarla al iniciar
        this.setLocationRelativeTo(null); // Centra la ventana en la pantalla
        
        // Establece imágenes en los botones de menú
        setImageLabel(UsuarioMenu, "src/recursos/img/usuarios.png");
        setImageLabel(ProductoMenu, "src/recursos/img/categorias.png");
        
        this.setTitle("Comercial Rojas"); // Establece el título de la ventana
        
        if(Conexion.session.getIdRol() != Rol.ADMINISTRADOR){
            UsuarioMenu.setVisible(false);
        }
        
        if(Conexion.session.getIdRol() == Rol.CAJERO){
            ProveedorMenu.setVisible(false);
            CompraMenu.setVisible(false);
        } else if(Conexion.session.getIdRol() == Rol.COMPRADOR){
            ClienteMenu.setVisible(false);
            VentaMenu.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        Sidebar = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        UsuarioMenu = new components.jMenuItem();
        ProductoMenu = new components.jMenuItem();
        ClienteMenu = new components.jMenuItem();
        CategoriaMenu = new components.jMenuItem();
        VentaMenu = new components.jMenuItem();
        CerrarSessionButton = new components.jMenuItem();
        ProveedorMenu = new components.jMenuItem();
        CompraMenu = new components.jMenuItem();
        container = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        background.setBackground(new java.awt.Color(255, 255, 255));

        Sidebar.setBackground(new java.awt.Color(255, 0, 0));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("COMERCIAL ROJAS");

        UsuarioMenu.setText("Usuarios");
        UsuarioMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuarioMenuActionPerformed(evt);
            }
        });

        ProductoMenu.setText("Productos");
        ProductoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductoMenuActionPerformed(evt);
            }
        });

        ClienteMenu.setText("Clientes");
        ClienteMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClienteMenuActionPerformed(evt);
            }
        });

        CategoriaMenu.setText("Categorías");
        CategoriaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoriaMenuActionPerformed(evt);
            }
        });

        VentaMenu.setText("Ventas");
        VentaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VentaMenuActionPerformed(evt);
            }
        });

        CerrarSessionButton.setText("Cerrar Sesión");
        CerrarSessionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarSessionButtonActionPerformed(evt);
            }
        });

        ProveedorMenu.setText("Proveedores");
        ProveedorMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProveedorMenuActionPerformed(evt);
            }
        });

        CompraMenu.setText("Compras");
        CompraMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompraMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SidebarLayout = new javax.swing.GroupLayout(Sidebar);
        Sidebar.setLayout(SidebarLayout);
        SidebarLayout.setHorizontalGroup(
            SidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(UsuarioMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(SidebarLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(21, Short.MAX_VALUE))
            .addComponent(ProductoMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ClienteMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(CategoriaMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addComponent(ProveedorMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CerrarSessionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(VentaMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(CompraMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        SidebarLayout.setVerticalGroup(
            SidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidebarLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(UsuarioMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProductoMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClienteMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CategoriaMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProveedorMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VentaMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CompraMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(CerrarSessionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        container.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 814, Short.MAX_VALUE)
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(Sidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Sidebar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private javax.swing.JPanel ActualPage;
    
    // Método para establecer la página activa en el contenedor principal
    private void setPage(javax.swing.JPanel Page, String title){
        this.ActualPage = Page; // Establece la página actual
        this.ActualPage.setSize(container.getWidth(), container.getHeight()); // Establece el tamaño de la página igual al tamaño del contenedor
        this.ActualPage.setLocation(0,0); // Establece la posición de la página en el contenedor
        activeMenuItem(title); // Activa el elemento del menú correspondiente a la página actual
        this.setTitle("Comercial Rojas - "+ title); // Establece el título de la ventana con el nombre de la página
        
        container.removeAll(); // Elimina cualquier componente existente en el contenedor
        container.add(this.ActualPage); // Agrega la página actual al contenedor
        container.revalidate(); // Vuelve a validar el contenedor para que se muestre la nueva página
        container.repaint(); // Vuelve a pintar el contenedor para actualizar la interfaz
    }
    
    private void activeMenuItem(String title){
        Component components[] = Sidebar.getComponents(); // Obtiene los componentes del menú lateral
        for (Component component : components) {
            // Verifica si el componente es un JMenuItem personalizado
            if(component.getClass() == components.jMenuItem.class){
                components.jMenuItem menuItem = (components.jMenuItem) component; // Convierte el componente a un JMenuItem personalizado
                menuItem.setActive(menuItem.getText().equalsIgnoreCase(title)); // Activa o desactiva el elemento del menú según el título
            }
        }
    }
    
    // Método para manejar el evento cuando se selecciona la opción del menú "Categorías"
    private void CategoriaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoriaMenuActionPerformed
        setPage(new CategoriaPage(this), "Categorías"); // Establece la página de categorías como la página activa
    }//GEN-LAST:event_CategoriaMenuActionPerformed

    // Método para manejar el evento cuando se redimensiona el componente
    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        if(ActualPage != null) {
            container.removeAll(); // Elimina cualquier componente existente en el contenedor
            ActualPage.setSize(container.getWidth(), container.getHeight()); // Establece el tamaño de la página igual al tamaño del contenedor
            container.add(ActualPage); // Agrega la página actual al contenedor
            container.revalidate(); // Vuelve a validar el contenedor para que se muestre la página actualizada
        }
    }//GEN-LAST:event_formComponentResized

    // Método para manejar el evento cuando se selecciona la opción del menú "Usuarios"
    private void UsuarioMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuarioMenuActionPerformed
        setPage(new UsuarioPage(this), "Usuarios"); // Establece la página de usuarios como la página activa
    }//GEN-LAST:event_UsuarioMenuActionPerformed

    private void ProductoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductoMenuActionPerformed
        setPage(new ProductoPage(this), "Productos"); // Establece la página de productos como la página activa
    }//GEN-LAST:event_ProductoMenuActionPerformed

    private void ClienteMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClienteMenuActionPerformed
        setPage(new ClientePage(this), "Clientes");
    }//GEN-LAST:event_ClienteMenuActionPerformed

    private void ProveedorMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProveedorMenuActionPerformed
        setPage(new ProveedorPage(this), "Proveedores");
    }//GEN-LAST:event_ProveedorMenuActionPerformed

    private void VentaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VentaMenuActionPerformed
        setPage(new VentaPage(this), "Ventas");
    }//GEN-LAST:event_VentaMenuActionPerformed

    private void CompraMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompraMenuActionPerformed
        setPage(new CompraPage(this), "Compras");
    }//GEN-LAST:event_CompraMenuActionPerformed

    private void CerrarSessionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarSessionButtonActionPerformed
        new Login().setVisible(true);
        Conexion.session = null;
        this.dispose();
    }//GEN-LAST:event_CerrarSessionButtonActionPerformed

    // Establece la página de usuarios como la página activa
    private void setImageLabel(javax.swing.JButton label, String root){
        ImageIcon image = new ImageIcon(root); // Crea un objeto ImageIcon a partir de la ruta de la imagen
        Icon icon = new ImageIcon(image.getImage().getScaledInstance(40, label.getHeight()-10, Image.SCALE_DEFAULT)); // Escala la imagen al tamaño deseado
        label.setIcon(icon); // Establece la imagen escalada en el botón
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatLightLaf.setup();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private components.jMenuItem CategoriaMenu;
    private components.jMenuItem CerrarSessionButton;
    private components.jMenuItem ClienteMenu;
    private components.jMenuItem CompraMenu;
    private components.jMenuItem ProductoMenu;
    private components.jMenuItem ProveedorMenu;
    private javax.swing.JPanel Sidebar;
    private components.jMenuItem UsuarioMenu;
    private components.jMenuItem VentaMenu;
    private javax.swing.JPanel background;
    private javax.swing.JPanel container;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
